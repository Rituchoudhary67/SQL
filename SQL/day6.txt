######### between,aliases,joins,inner join ##########

# SQL BETWEEN Operator 
The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates.

The BETWEEN operator is inclusive: begin and end values are included. 

# BETWEEN Syntax
SELECT column_name(s)
FROM table_name
WHERE column_name BETWEEN value1 AND value2;

demo table : Products

product_id     Product_name      quantity      price       total
01             Saree             20            200         2000
02             T-Shirt           10            100         1000
03             Kurti             5             200         1000
04             lagi              5             120         600

Q. selects all products with a price between 100 and 150:

Ans : SELECT * FROM Products
      WHERE Price BETWEEN 100 AND 150;

output   product_id     Product_name      quantity      price       total
         02             T-Shirt           10            100         1000
         04             lagi              5             120         600


# NOT BETWEEN Example
To display the products outside the range of the previous example, use NOT BETWEEN:

Q. selects all products which price is not between 100 and 150:

Ans : SELECT * FROM products
      WHERE Price NOT BETWEEN 100 AND 150;

output:    product_id     Product_name      quantity      price       total
           01             Saree             20            200         2000
           03             Kurti             5             200         1000
     
# BETWEEN with IN Example

Example:  SELECT * FROM Products
          WHERE Price BETWEEN 100 AND 150
          AND product_id NOT IN (1,2,3);

output :  product_id     Product_name      quantity      price       total
          04             lagi              5             120         600



### SQL Aliases ###

SQL aliases are used to give a table, or a column in a table, a temporary name.

Aliases are often used to make column names more readable.

An alias only exists for the duration of that query.

An alias is created with the AS keyword.


# Alias Column Syntax
  SELECT column_name AS alias_name
  FROM table_name;

# Alias Table Syntax
  SELECT column_name(s)
  FROM table_name AS alias_name;

#### 